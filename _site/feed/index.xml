<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
   <channel>
      <title>Jonathan Beebe</title>
      <link>http://jonbeebe.net</link>
      <description>Tech industry links and articles by Jonathan Beebe.
</description>
      <lastBuildDate>Sat, 13 Feb 2016 19:33:50 -0800</lastBuildDate>

      
         <item>
            <title>Plain Text Notes</title>
            
               <link>http://jonbeebe.net/2016/02/plain-text-notes/</link>
               <guid isPermaLink="false">http://jonbeebe.net/2016/02/plain-text-notes/</guid>
            
            <pubDate>Fri, 12 Feb 2016 19:48:00 -0800</pubDate>
            <description>&lt;p&gt;After bouncing between various note-keeping apps, I finally settled on a very simple solution that is flexible, cross-platform, freely available, and will surely stand the test of time: plain text.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Journal entries. Recipes. Work log. Grocery lists. Things I need to quickly pull up on my phone when I’m on the go. Ideas for gifts I want to buy my wife and kids. Anything, and everything. Digital notes have been an absolutely essential part of my personal and professional life. What I use to &lt;em&gt;manage&lt;/em&gt; the notes essentially serves as my secondary brain&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;Without putting a lot of thought into it initially, I started out using the stock Notes app on iOS and the OS X, which worked until I took a &lt;a href=&quot;/2015/07/my-desktop-july-2015/&quot;&gt;detour&lt;/a&gt; into the land of Linux&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; and it suddenly became annoyingly painful to access my notes&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;. In my frustration, I began thinking about my mobile needs. If I were to move away from iOS in the future, even if temporarily (be it Android or something else), what would I do then? I often need to access my notes when I’m on the go, so this was a big concern.&lt;/p&gt;

&lt;p&gt;It was clear that I needed a cross-platform solution that could withstand my (admittedly erratic) computing habits over time. I don’t think vendor lock-in is an acceptable option for me.&lt;/p&gt;

&lt;h2 id=&quot;runner-ups&quot;&gt;Runner-ups&lt;/h2&gt;

&lt;h3 id=&quot;evernote&quot;&gt;Evernote&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://evernote.com&quot;&gt;Evernote&lt;/a&gt; was the first contender, but I ultimately decided against it because, like Apple Notes, it stores notes as &lt;a href=&quot;https://en.wikipedia.org/wiki/Rich_Text_Format&quot;&gt;Rich Text&lt;/a&gt;. I really dislike WYSIWYG&lt;sup id=&quot;fnref:4&quot;&gt;&lt;a href=&quot;#fn:4&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt; editing, and that is the bread and butter of Evernote. Not necessarily a bad thing, but not for me. I’ll admit that being able to embed media and adding attachments to notes is really nice though.&lt;/p&gt;

&lt;h3 id=&quot;simplenote&quot;&gt;Simplenote&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://simplenote.com&quot;&gt;Simplenote&lt;/a&gt; was next in line, and I almost went with it as it was very similar to what Apple offers, but notes are plain text and the service is cross-platform due to being web-based. However, there were some concerns that kept me at bay.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3rd-party app selection&lt;/strong&gt;. I don’t like being tied to the web app&lt;sup id=&quot;fnref:5&quot;&gt;&lt;a href=&quot;#fn:5&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt; and wasn’t completely happy with the available 3rd party clients (I did like the first-party iOS app, however). There is a &lt;a href=&quot;http://fletcherpenney.net/other_projects/simplenotesync/&quot;&gt;script&lt;/a&gt; that can be used to sync notes to a local folder, but I didn’t really want to have to go through that, and more importantly, I wasn’t confident enough that the script wouldn’t wipe my notes on accident, or be maintained long enough to withstand any API changes that Simplenote might introduce in the future.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Limited ways to organize my notes&lt;/strong&gt;. I really want better organization for my notes, such as a “Work” folder for work-related notes, a “Journal” folder for journal entries, and so on. I know I could use tags instead of folders, but that leads me to my next point…&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Is it future-proof?&lt;/strong&gt; What happens if Simplenote shuts down before I no longer need to keep notes (in other words, before I die)? Simplenote &lt;em&gt;does&lt;/em&gt; have an export option, but it gives each note a crazy, random filename and the tags don’t seem to be preserved (there goes any work I put into tag-based organization).&lt;/p&gt;

&lt;p&gt;Evernote is pretty great about allowing you to organize notes into separate “Notebooks”, and I’m sure there are other services that do something similar, but the other two points mentioned could easily apply to just about any app or service.&lt;/p&gt;

&lt;p&gt;The thought of relying on my chosen note-keeping to outlive me makes me a little uncomfortable, so the only remaining option seemed to be manually handling the notes myself via locally saved, old-fashioned plain text.&lt;/p&gt;

&lt;h2 id=&quot;the-setup&quot;&gt;The Setup&lt;/h2&gt;

&lt;p&gt;All of my notes live in a single, top-level folder on my computer’s hard drive. I have sub-directories for Work, Personal, Journal, Projects, Media and Attachments. The notes themselves are just plain text files, saved as &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;sync-and-backup&quot;&gt;Sync and backup&lt;/h3&gt;

&lt;p&gt;Since I need to be able to access my notes from multiple devices (my laptop, desktop, and phone), syncing is a huge requirement for me. I already use &lt;a href=&quot;http://dropbox.com&quot;&gt;Dropbox&lt;/a&gt;, so my top-level “Notes” folder lives in my Dropbox folder. Any changes I make to notes are automatically synced (and backed-up online).&lt;/p&gt;

&lt;p&gt;If Dropbox ever goes away, or I want to stop using it, I can just turn my notes folder into a &lt;a href=&quot;https://git-scm.com&quot;&gt;Git&lt;/a&gt; or &lt;a href=&quot;https://www.mercurial-scm.org&quot;&gt;Mercurial&lt;/a&gt; repository and host it privately on &lt;a href=&quot;http://github.com&quot;&gt;GitHub&lt;/a&gt; or &lt;a href=&quot;http://bitbucket.org&quot;&gt;Bitbucket&lt;/a&gt;. I’m tempted to go this route &lt;em&gt;now&lt;/em&gt; for the ability to track changes and revert notes to an older state (if necessary), but what’s holding me back from this approach is mobile. While there are many great mobile apps for viewing and editing Markdown files in a Dropbox folder, I haven’t yet found the same for a hosted repository&lt;sup id=&quot;fnref:6&quot;&gt;&lt;a href=&quot;#fn:6&quot; class=&quot;footnote&quot;&gt;6&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;h3 id=&quot;editing-and-viewing&quot;&gt;Editing and viewing&lt;/h3&gt;

&lt;p&gt;This is where “everything as plain text” really shines. I spend most of my day in a text editor (&lt;a href=&quot;http://www.barebones.com/products/bbedit/&quot;&gt;BBEdit&lt;/a&gt;), so it’s just comfortable for me to edit my notes in the same app. BBEdit also has a nice Projects feature, so all I need to do is open &lt;em&gt;Notes.bbprojectd&lt;/em&gt; and all my notes are there, nicely organized in the sidebar. I can now take advantage of BBEdit’s robust search capabilities for all of my notes, which is a huge plus.&lt;/p&gt;

&lt;p&gt;As far as mobile goes, all I needed was a text editor that could link to Dropbox. I’m pretty happy with &lt;a href=&quot;https://ia.net/writer&quot;&gt;iA Writer&lt;/a&gt;, but there are other options as well (some of which are free). My requirements for mobile aren’t that extensive, however, as I rarely do any significant editing of notes on my phone, but I often need to view them.&lt;/p&gt;

&lt;h3 id=&quot;media-and-attachments&quot;&gt;Media and attachments&lt;/h3&gt;

&lt;p&gt;This is one of the big selling points of Evernote, and is surprisingly easy to duplicate with my current setup. In my top-level folder, I have sub-folders for Media and Attachments. Since I save my notes as Markdown, I can easily embed images, videos, and links as I would when writing a blog post.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;![My Image](../Media/2016-02-12-my-image.jpg)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In fact, if I really want to get fancy, I could turn my notes into a private &lt;a href=&quot;https://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt; blog, but I digress (that’s probably overkill anyway). In any case, BBEdit has a Markdown previewer (as well as iA Writer), so I can just use the built-in viewers when I want to see embedded media and links.&lt;/p&gt;

&lt;p&gt;All in all, this plain text setup has been working out really well for me, and I don’t feel like I’m missing out on any features by not going with a dedicated app or service. If you’re in search of a note-keeping service, or feel like a change, I recommend giving the plain text approach a shot!&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;Although, having a “second brain” doesn’t seem to make me any smarter for some reason. Weird. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;It was a short detour. I’m back on OS X now. &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;No, &lt;a href=&quot;http://icloud.com&quot;&gt;iCloud.com&lt;/a&gt; doesn’t do it for me. Does that site even work on Linux browsers? &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:4&quot;&gt;
      &lt;p&gt;WYSIWYG = “What you see is what you get” &lt;a href=&quot;#fnref:4&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:5&quot;&gt;
      &lt;p&gt;I’m a web developer, but for something I access and use as frequently as my notes, I like to have a dedicated app with a first-class dock icon on my Mac. &lt;a href=&quot;#fnref:5&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:6&quot;&gt;
      &lt;p&gt;It occurs to me that in the meantime, I can still use Git or Mercurial for my notes while still on Dropbox. Noted! &lt;a href=&quot;#fnref:6&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
         </item>
      
         <item>
            <title>Ignore the Noise</title>
            
               <link>http://jonbeebe.net/2016/02/ignore-the-noise/</link>
               <guid isPermaLink="false">http://jonbeebe.net/2016/02/ignore-the-noise/</guid>
            
            <pubDate>Thu, 11 Feb 2016 18:00:00 -0800</pubDate>
            <description>&lt;p&gt;Whether you’re new to the JavaScript ecosystem or have some experience, unless you’re super-human, you’ll inevitably become overwhelmed at the sheer number of frameworks, libraries, build systems, preprocessors, template engines (the list goes on and on) that are available.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;What’s worse, as you put a significant chunk of time into a certain stack, there will inevitably be other libraries, frameworks, and tools that gain more popularity than the ones you chose, and likely brand new projects that became the &lt;em&gt;shiny new thing&lt;/em&gt; while you were busy getting things done. Before long, you start to feel like you’re suddenly becoming irrelevant.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://bitworking.org&quot;&gt;Joe Gregorio&lt;/a&gt; argued in 2014 that we should abandon all frameworks in favor of plain HTML+CSS+JS in his &lt;a href=&quot;http://bitworking.org/news/2014/05/zero_framework_manifesto&quot;&gt;zero framework manifesto&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I think it’s time to rethink the model of JS frameworks. There’s no need to invent yet another way to do something, just use HTML+CSS+JS.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The landscape has only gotten more cluttered since then, so I don’t think the web development community as a whole agrees, probably because that approach may not be practical for everyone and for every project. Still, I think it’s a good starting point. More on that later.&lt;/p&gt;

&lt;p&gt;A couple of years ago, I invested quite a bit of time into &lt;a href=&quot;http://marionettejs.com&quot;&gt;Backbone.Marionette&lt;/a&gt;, and once I had some breathing room and took a step back, I saw that &lt;a href=&quot;https://angularjs.org&quot;&gt;Angular&lt;/a&gt; was actually the cool kid on the block. I also used &lt;a href=&quot;http://lesscss.org&quot;&gt;Less&lt;/a&gt; and &lt;a href=&quot;http://handlebarsjs.com&quot;&gt;Handlebars&lt;/a&gt; (for CSS preprocessing and HTML templating, respectively), although tons of shops prefer &lt;a href=&quot;http://sass-lang.com&quot;&gt;Sass&lt;/a&gt; and there are many other popular alternatives to Handlebars. It’s easy to feel like you’re not keeping up, and that your skills will soon become irrelevant if you’re not sprinting at top-speed, 24 hours a day. Unfortunately, no matter what you do, at least when it comes to web development, you’re going to be “behind” in one way or another.&lt;/p&gt;

&lt;p&gt;All this to say: it doesn’t matter. &lt;strong&gt;Ignore the noise&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;But that begs the question, how can you determine what path to choose when there’s this vast sea of choices out there? Fortunately, depending on your personal situation, there’s a way through this.&lt;/p&gt;

&lt;h2 id=&quot;your-own-projects&quot;&gt;Your Own Projects&lt;/h2&gt;

&lt;p&gt;For personal projects where you have complete control over your technology stack, I recommend starting with just plain HTML+CSS+JS (which have standards that don’t become outdated very frequently), and only add libraries that fit your needs—as needed. In other words, let the requirements of your project determine its dependencies. If you &lt;em&gt;do&lt;/em&gt; want to go with a full-blown framework, take a look at some of the more popular and stable options out there and just go with the one that matches you and your project best and proceed full steam ahead.&lt;/p&gt;

&lt;p&gt;Don’t worry about falling behind. Just do some research, &lt;em&gt;choose something&lt;/em&gt;, and move forward with with your decisions. The important thing to remember here is that you don’t need to be a pro at everything, or worry if you chose the &lt;em&gt;best&lt;/em&gt; thing out there (that’ll change anyway, and probably next week). You’ll end up learning a ton about your chosen stack and that experience alone will be valuable.&lt;/p&gt;

&lt;p&gt;I mentioned research, but it’s worth emphasizing. Last year, &lt;a href=&quot;http://www.breck-mckye.com&quot;&gt;Jimmy Breck-Mckye&lt;/a&gt; wrote about the “&lt;a href=&quot;http://www.breck-mckye.com/blog/2014/12/the-state-of-javascript-in-2015/&quot;&gt;State of JavaScript in 2015&lt;/a&gt;” and cited “framework churn” as a major problem. Angular, one of the most popular front-end JavaScript frameworks, was used as an example:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;At the close of 2014, it’s difficult as a JavaScript developer to back a particular library or technology with confidence. Even the mighty Angular, which seemed set to establish itself as the One True Framework of Single Page Applications, looks destabilized by recent events.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I’m not in the Angular camp, at least not currently, so I have no comment on that in particular, but it’s an interesting perspective from someone who obviously was.&lt;/p&gt;

&lt;p&gt;I personally tend to favor the “pick and choose small libraries to fit your needs” over the the “one size fits all” approach of monolithic frameworks, but your mileage (and requirements) may vary. If you &lt;em&gt;do&lt;/em&gt; go the monolithic framework route, it’s worth making sure what you choose is actively maintained and has a healthy community around it—unless of course, you plan on maintaining it yourself, which is probably not likely.&lt;/p&gt;

&lt;h2 id=&quot;work-requirements&quot;&gt;Work Requirements&lt;/h2&gt;

&lt;p&gt;If you’re employed and your company has chosen the stack for you, then you already have your answer. If you &lt;em&gt;don’t&lt;/em&gt; have a say-so, you don’t need to worry about drowning in choices because you won’t have one! Spend time learning and improving your skills in Marionette, Angular, &lt;a href=&quot;https://facebook.github.io/react/&quot;&gt;React&lt;/a&gt;, &lt;a href=&quot;http://backbonejs.org&quot;&gt;Backbone&lt;/a&gt; or whatever it is your company uses. With your own time, you can choose to develop other skills or improve on your work-mandated ones.&lt;/p&gt;

&lt;p&gt;On the other hand, if you’re in a position to have some say in these kinds of decisions, then tackle it as you would with your own projects. Research the actively developed, mature options out there and choose the frameworks and/or libraries that fit your project and team best, ignoring the others (no matter how new and shiny they are) until there’s a problem you can’t solve—or solve well—with the decisions you’ve made.&lt;/p&gt;

&lt;h2 id=&quot;developer-for-hire&quot;&gt;Developer for Hire&lt;/h2&gt;

&lt;p&gt;The more difficult scenario is if you’re trying to build up your skills in hopes of getting hired as a JavaScript engineer, and need to decide what the best course of action is to achieve your goal. Unless there’s a specific role you’re targeting, in which case what to learn should be a little more clear, I recommend starting your own open-source project, making it public, and stick with it through completion. When you’re done, you can always choose a different stack for your next project, swap out the pieces that didn’t work well for you, and go from there. Over time, you’ll gain some valuable experience and you’ll not only know enough to be relevant, you’ll be agile enough to &lt;em&gt;adapt&lt;/em&gt; to any other stack that’s thrown your way by a future employer. Without a doubt, &lt;strong&gt;doing is the best way to learn&lt;/strong&gt; anything, and that absolutely applies in this field.&lt;/p&gt;

&lt;p&gt;Today, as JavaScript developers, we are flooded with choice. Fortunately, if you can block out the excessive noise and commit to making some decisions, you’ll find that having an abundance of choices can actually be a benefit: there is something for just about anyone, and any project you can think of. The worst choice you can make is no choice at all, allowing decision paralysis to prevent you from getting any meaningful work done out of fear you’ll make the &lt;em&gt;wrong&lt;/em&gt; choices and waste a bunch of time.&lt;/p&gt;

&lt;p&gt;Don’t fall into that trap. Make decisions. Stick with them. Adapt as needed. Keep moving forward. &lt;em&gt;That&lt;/em&gt; is how to stay relevant as a JavaScript developer in today’s tumultuous environment.&lt;/p&gt;
</description>
         </item>
      
         <item>
            <title>My Desktop: July 2015</title>
            
               <link>http://jonbeebe.net/images/2015-07-11-xfce4.12.png</link>
               <guid isPermaLink="false">http://jonbeebe.net/images/2015-07-11-xfce4.12.png</guid>
            
            <pubDate>Sat, 11 Jul 2015 21:56:00 -0700</pubDate>
            <description>&lt;p&gt;&lt;img src=&quot;http://jonbeebe.net/images/2015-07-11-xfce4.12-thumb.png&quot; alt=&quot;XFCE 4.12&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Recently upgraded to XFCE 4.12 and loving it.&lt;/p&gt;

</description>
         </item>
      
         <item>
            <title>iPads: The Bad, The Good And The Takeaway</title>
            
               <link>http://techpinions.com/ipads-the-bad-the-good-and-the-takeaway/35720</link>
               <guid isPermaLink="false">http://techpinions.com/ipads-the-bad-the-good-and-the-takeaway/35720</guid>
            
            <pubDate>Sun, 19 Oct 2014 18:32:56 -0700</pubDate>
            <description>&lt;p&gt;Very insightful analysis by John Kirk. This line in particular was an eye-opener:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If the iPad were its own company it would be larger than Facebook, Twitter, Yahoo, Groupon, and Tesla combined.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
         </item>
      
         <item>
            <title>Back to BBEdit</title>
            
               <link>http://jonbeebe.net/2014/10/back-to-bbedit/</link>
               <guid isPermaLink="false">http://jonbeebe.net/2014/10/back-to-bbedit/</guid>
            
            <pubDate>Sun, 19 Oct 2014 16:43:00 -0700</pubDate>
            <description>&lt;blockquote&gt;
  &lt;p&gt;It doesn’t suck.®&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;BBEdit originally debuted on Macintosh System Software 6, and while it may have been surpassed—feature-wise—by other text editors in recent years, it’s actually one of the only OS X text editors that can meet the following criteria (and meet it well):&lt;/p&gt;

&lt;!--more--&gt;

&lt;ol&gt;
  &lt;li&gt;Truly native Mac software&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;; feels “at home” visually and works as you would expect a Mac app to work. In other words, it’s very “Mac-like”.&lt;/li&gt;
  &lt;li&gt;Has a history that can provide assurance that it’ll most likely be sticking around and actively developed for many more years to come.&lt;/li&gt;
  &lt;li&gt;It is fast.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We’re getting to a time where text editor speed is almost taken for granted, but point 1 is often difficult to meet because of cross-platform requirements, and unless your vim or Emacs, there’s really no competing with BBEdit’s history. &lt;a href=&quot;http://www.barebones.com&quot;&gt;Bare Bones&lt;/a&gt; as a company is up there with &lt;a href=&quot;http://www.omnigroup.com&quot;&gt;The Omni Group&lt;/a&gt; and &lt;a href=&quot;http://www.panic.com&quot;&gt;Panic&lt;/a&gt; as far as the respect it has among Mac software enthusiasts.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.sublimetext.com&quot;&gt;Sublime Text&lt;/a&gt; is blazing fast, but it has a somewhat spotty development history and correct me if I’m wrong, it looks like it’s created and maintained by a sole developer (Jon Skinner). Out of the box, as a Mac app, it’s ugly as sin. You can customize it to look better, but that doesn’t make everything else about it any more “Mac-like”. Really the one true thing I love about Sublime Text is the way it does multi-word selection via &lt;code class=&quot;highlighter-rouge&quot;&gt;CMD+D&lt;/code&gt;, and that’s by no means a deal-breaker.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://chocolatapp.com&quot;&gt;Chocolat&lt;/a&gt; definitely hits points 1 and 3. Visually, it looks very nice, and while I’ve seen some users complain of its speed with some text files, it’s fast enough on my machine and for my particular usage (I’m not editing any megabyte-or-larger sized text files). It doesn’t currently have anything that makes me want to use it over BBEdit, however.&lt;/p&gt;

&lt;h3 id=&quot;why-im-switching-at-all&quot;&gt;Why I’m switching at all&lt;/h3&gt;

&lt;p&gt;I’m a developer, so I’m obviously switching “back” to BBEdit from something. Well in my case, it’s two somethings. I’m a web developer by day (Backbone + Marionette) and my company’s workflow is heavily dependent on &lt;a href=&quot;https://www.jetbrains.com/idea/&quot;&gt;IntelliJ IDEA&lt;/a&gt; (lots of servlets and such).  On my “own” time, I still do lot of contracting work developing &lt;a href=&quot;http://coronalabs.com/products/corona-sdk/&quot;&gt;Corona&lt;/a&gt; apps, and for that I’ve been using Sublime Text (version 3 beta).&lt;/p&gt;

&lt;p&gt;I want to change things for the following reasons:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;IntelliJ can be dog slow on my machine. I use it for web development with a late-2012 Mac mini. It has a 2.3 GHz Intel Core i7 with 16 GB of DDR3 RAM and a 250 GB solid-state drive, so there’s no reason why my development environment should ever feel like it’s crawling. It does. Often. I even limit my number of open editor tabs to 10, and I followed all the optimization tips I could find. I want to use something faster than IntelliJ, period.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;As previously mentioned, Sublime Text is fast. Really fast. But it’s only used for some of my work. It’s also jarring to have to switch between using two different editors. I want one programming environment to rule them all (even if I’m still bound to IntelliJ in some ways, more on that later).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I love BBEdit, and I miss it. I’ve been dying for a reason to dust off my license and make it my full-time text editor again. I used &lt;a href=&quot;http://www.barebones.com/products/textwrangler/&quot;&gt;TextWrangler&lt;/a&gt;&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; for a while back in 2010 to do all of my work at Ansca and then I purchased a BBEdit license when version 10 launched. I continued to use BBEdit for a while until I started working at &lt;a href=&quot;http://lanica.co&quot;&gt;Lanica&lt;/a&gt;, where we used &lt;a href=&quot;http://www.appcelerator.com/titanium/titanium-studio/&quot;&gt;Titanium Studio&lt;/a&gt; (Eclipse rebranded—yuck) and I eventually jumped onto the Sublime Text bandwagon based on recommendations from some colleagues. I began using it and got very used to it, but I never loved it.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So dust off my BBEdit 10 license I did, and I’m now using it as my full-time editor for all things programming (and writing for that matter, this blog post was happily written in BBEdit). How did I do it?&lt;/p&gt;

&lt;h3 id=&quot;replacing-intellij-with-bbedit&quot;&gt;Replacing IntelliJ with BBEdit&lt;/h3&gt;

&lt;p&gt;I have to use IntelliJ because of there are servlets combined with a Tomcat Run/Debug configuration we use at my company that are required for me to do my work. Once those are running, however, 100% of what I’m doing in IntelliJ is editing text. Why can’t I use an external text editor of my choice and just have IntelliJ do it’s thing separately without me needing to be &lt;em&gt;in it&lt;/em&gt; to do my actual work?&lt;/p&gt;

&lt;p&gt;There’s a big problem I ran into with this approach, however. If a file is modified outside of IntelliJ, it being a Java app (not a native Mac app), you have to click “Synchronize” on the toolbar (or &lt;code class=&quot;highlighter-rouge&quot;&gt;CMD+OPT+Y&lt;/code&gt;) for it to pick up the changes (which it needs in order for the servlets to serve the proper stuff). I refuse to do that.&lt;/p&gt;

&lt;p&gt;Every time I have a change I need to test in the browser, the last thing I want to do is click the IntelliJ window and “synchronize” before clicking away &lt;em&gt;again&lt;/em&gt; into the web browser. It’s bad enough I already have to do that whenever I pull in changes from SourceTree (my Mercurial client of choice). My goal is to make my development environment more pleasant, not less.&lt;/p&gt;

&lt;p&gt;Then, I remembered BBEdit’s excellent AppleScript support. There’s even an AppleScript menu, &lt;em&gt;and&lt;/em&gt; you can assign hotkeys to individual scripts. Perfect. The only problem is, I don’t know AppleScript. Fortunately, a lot of folks on the internet do, so after some Googling, I was able to shamble together a script that does the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Activate IntelliJ and invoke the keyboard shortcut to “synchronize” files.&lt;/li&gt;
  &lt;li&gt;Put BBEdit back in front of IntelliJ, for easier access when I need to go back to programming.&lt;/li&gt;
  &lt;li&gt;Launch and/or activate Google Chrome&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So now I can do my programming in BBEdit, and when I’m ready to test my changes, I can simply invoke a keyboard shortcut that will synchronize the files in IntelliJ, and Google Chrome is activated (thus updating assets and resources due to “frame deactivation”). I’m all set.&lt;/p&gt;

&lt;p&gt;Here’s the AppleScript (bound to &lt;code class=&quot;highlighter-rouge&quot;&gt;CMD+OPTION+Y&lt;/code&gt;, same as IntelliJ synchronize):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-- Store reference to BBEdit in a variable, for later activation
set currentApp to path to frontmost application

activate application &quot;IntelliJ&quot;
tell application &quot;System Events&quot;
    delay 0.1

    -- Invoke IntelliJ&#39;s keyboard shortcut for &quot;synchronize&quot;
    keystroke &quot;y&quot; using {option down, command down}
end tell

-- Give IntelliJ a couple of seconds to refresh files
delay 2

-- Put BBEdit back in front of IntelliJ
activate currentApp
delay 0.5

-- Launch and/or activate Google Chrome
tell application &quot;Google Chrome&quot;
    if it is running then
        activate
    else
        open application &quot;Google Chrome&quot;
    end if
end tell
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So with minimal fuss (an added keyboard shortcut to my workflow), I get to use a (much faster) text editor I’m very comfortable with. Reasonable trade-off.&lt;/p&gt;

&lt;h3 id=&quot;replacing-sublime-text-with-bbedit&quot;&gt;Replacing Sublime Text with BBEdit&lt;/h3&gt;

&lt;p&gt;So that takes care of my IntelliJ workflow. What about my work that I use Sublime for? That one’s an even easier AppleScript. I just need it to launch/activate the Corona Simulator (also bound to a keyboard shortcut):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;activate application &quot;Corona Simulator&quot;
tell application &quot;System Events&quot;
    -- Relaunch the Corona Simulator
    keystroke &quot;r&quot; using command down
end tell
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And that’s it. Just two AppleScripts and my workflow completely lends itself to BBEdit.&lt;/p&gt;

&lt;h3 id=&quot;favorite-features&quot;&gt;Favorite Features&lt;/h3&gt;

&lt;p&gt;Here are some of my favorite things about BBEdit (and yes, I’m well aware Sublime either has all of the following, or has a package that can do it, but I much prefer the BBEdit approach in overlapping features):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;This is one of the few text editors that has a default syntax color scheme I actually like (good thing too, because BBEdit’s online color scheme selection is admittedly pretty weak).&lt;/li&gt;
  &lt;li&gt;Awesome searching capabilities.&lt;/li&gt;
  &lt;li&gt;Cmd + R symbol search, just like Sublime (meaning I don’t have to get used to a different keyboard shortcut). I think this must have been added fairly recently (I’m using version 10.5.13 currently), because I don’t remember this being available last time I used BBEdit around the time version 10.0 was released.&lt;/li&gt;
  &lt;li&gt;Projects are easy to create and re-open.&lt;/li&gt;
  &lt;li&gt;The AppleScript menu + custom key bindings to individual scripts.&lt;/li&gt;
  &lt;li&gt;Very well-presented Preferences pane. No more editing a JSON file (Sublime), and no more dealing with IntelliJ’s horrendous implementation.&lt;/li&gt;
  &lt;li&gt;Scratchpad. I used to have to open a TextEdit window when I needed this functionality. Now it’s built-in.&lt;/li&gt;
  &lt;li&gt;Clippings.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;wishlist&quot;&gt;Wishlist&lt;/h3&gt;

&lt;p&gt;I’m pretty happy with BBEdit, but of course it doesn’t have everything I could possibly hope for. I plan on submitting the following items as feature requests to Bare Bones, and if I’m lucky, maybe one (or more?) will be included in a future update:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Per-project AppleScripts with their own keyboard shortcuts. Remember the AppleScripts I mentioned earlier? It would be nice to assign them both to the same keyboard shortcut, and have the correct script run depending on the project I’m currently working in.&lt;/li&gt;
  &lt;li&gt;Multiple selection/cursors implemented &lt;em&gt;exactly&lt;/em&gt; as Sublime Text does it.&lt;/li&gt;
  &lt;li&gt;Git and Mercurial as first-class citizens, on par with BBEdit’s Subversion features (which I currently have no use for).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And that’s really it. BBEdit is almost perfect for my needs, and I plan on sticking with it for the long haul. If you’re in the same boat as me and want to switch to BBEdit but are tied to other tools, see if an AppleScript can’t do most of the heavy lifting for you.&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;Read more about its history on the &lt;a href=&quot;http://en.wikipedia.org/wiki/BBEdit&quot;&gt;BBEdit Wikipedia page&lt;/a&gt;. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;At the time TextWranger was for all intents and purposes “BBEdit 9 Lite”, and it stayed that way for a while after BBEdit 10 was released. I happily upgraded. It has long since been updated to basically being a “lite” version of BBEdit 10, however. &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
         </item>
      
         <item>
            <title>Things 2.5 Released</title>
            
               <link>http://culturedcode.com/things/blog/2014/10/yosemite-and-things-2-5.html</link>
               <guid isPermaLink="false">http://culturedcode.com/things/blog/2014/10/yosemite-and-things-2-5.html</guid>
            
            <pubDate>Thu, 16 Oct 2014 18:26:26 -0700</pubDate>
            <description>&lt;p&gt;My favorite task management app for Mac (and iOS) just got updated to support OS X 10.10 Yosemite. The visual changes mirror that of Yosemite’s: refreshing but still familiar.&lt;/p&gt;

&lt;p&gt;I haven’t got used to using Notification Center Widgets regularly yet, but the new “Today” widget in Things may be just what I need to get started.&lt;/p&gt;
</description>
         </item>
      
         <item>
            <title>Siracusa Reviews OS X 10.10 Yosemite</title>
            
               <link>http://arstechnica.com/apple/2014/10/os-x-10-10/</link>
               <guid isPermaLink="false">http://arstechnica.com/apple/2014/10/os-x-10-10/</guid>
            
            <pubDate>Thu, 16 Oct 2014 15:28:09 -0700</pubDate>
            <description>&lt;p&gt;For some, John Siracusa’s OS X reviews are almost as anticipated as the OS release itself. Myself included.&lt;/p&gt;

&lt;p&gt;His conclusion sums up all twenty-five pages well:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The Mac today is just one part of a conceptually, organizationally, and (increasingly) technologically unified platform that spans from wrist to workstation. The hardware-based platforms of the past remain relevant to developers, but Apple seems determined to make them much less important to its customers. With Yosemite, the Mac has taken its first step into a larger world.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
         </item>
      
         <item>
            <title>Josh Ginter Reviews the iPhone 6 Plus</title>
            
               <link>http://toolsandtoys.net/reviews/the-iphone-6-plus/</link>
               <guid isPermaLink="false">http://toolsandtoys.net/reviews/the-iphone-6-plus/</guid>
            
            <pubDate>Wed, 15 Oct 2014 16:08:31 -0700</pubDate>
            <description>&lt;p&gt;Posted yesterday on the newly redesigned &lt;a href=&quot;http://toolsandtoys.net&quot;&gt;Tools and Toys&lt;/a&gt; website:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Apple’s newest iPhones are a story of tradeoffs for the first time in their history. Gone are the days of true corner-to-corner one handed use. Say goodbye to not noticing your iPhone in your front pocket, or even carrying your iPhone in your front pocket.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I just received my iPhone 6 Plus yesterday (finally!), so my review will be posted once I’ve had enough time with it.&lt;/p&gt;

</description>
         </item>
      
         <item>
            <title>Mac App Store: The Subtle Exodus</title>
            
               <link>http://blog.helftone.com/mac-app-store-the-subtle-exodus/</link>
               <guid isPermaLink="false">http://blog.helftone.com/mac-app-store-the-subtle-exodus/</guid>
            
            <pubDate>Tue, 14 Oct 2014 20:56:40 -0700</pubDate>
            <description>&lt;p&gt;Milen Dzhumerov:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The Mac App Store can be so much better, it can sustain businesses and foster an ecosystem that values and rewards innovation and high quality software. But if you talk to developers behind the scenes or explore the Mac App Store, you’ll find something completely different.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
         </item>
      
         <item>
            <title>Windows X</title>
            
               <link>http://jonbeebe.net/2014/10/windows-x/</link>
               <guid isPermaLink="false">http://jonbeebe.net/2014/10/windows-x/</guid>
            
            <pubDate>Tue, 14 Oct 2014 14:30:00 -0700</pubDate>
            <description>&lt;p&gt;I’m not a Windows user myself, and haven’t been for almost six years now, but I was forced to use it for the first part of my computer-using life so I still enjoy following new releases. This next one brings Windows and OS X closer together than every before, and I’m not talking about just the version number.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;top-new-feature&quot;&gt;Top New Feature&lt;/h3&gt;

&lt;p&gt;On September 30, Microsoft unveiled the next installment of their operating system, &lt;a href=&quot;http://www.theverge.com/2014/9/30/6868695/microsoft-windows-10-announced-official&quot;&gt;Windows 10&lt;/a&gt;,&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; and consistently at-or-near the top of every related news article is this revolutionary new thing called the Start Menu. Suddenly I’m having a really strong case of déjà vu.&lt;/p&gt;

&lt;p&gt;Sarcasm aside, Windows 95—the OS where the Start Menu really &lt;em&gt;was&lt;/em&gt; a new feature—is the first operating system I really got to know, and one of the things I actually liked about the Start Menu was how concise it was. Does anyone else out there think the Windows 10 Start Menu is a little… bloated? I know I would if I was still a Windows user, but then again, maybe I wouldn’t if the previous major version’s replacement for the Start Menu (the Start Screen) actually took up the entire screen.&lt;/p&gt;

&lt;h3 id=&quot;putting-the-x-in-10&quot;&gt;Putting the X in 10&lt;/h3&gt;

&lt;p&gt;Operating systems have an (understandable) history of “borrowing” features from one another. Over the years OS X borrowed features from Windows and vice-versa, but as I read about &lt;a href=&quot;http://www.techradar.com/us/news/software/operating-systems/10-great-new-features-in-windows-10-1267365&quot;&gt;new Windows 10 features&lt;/a&gt;, as an OS X user I couldn’t help but notice quite a bit of familiarity:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Start Menu tiles. These are actually taken from the Windows 8 Start Screen, not a “borrowed” feature from OS X, but I’m reminded of Notification Center widgets in the soon to be released OS X Yosemite.&lt;/li&gt;
  &lt;li&gt;Task View looks hands-down like a Windows port of Mission Control, a feature I’ve become pretty fond of on my Mac.&lt;/li&gt;
  &lt;li&gt;Virtual desktops. I first experienced these while dabbling with Linux, and was glad they were available OS X when I first made the switch from Windows six years ago. Not everyone uses these, but if you do, you can’t live without it.&lt;/li&gt;
  &lt;li&gt;Command prompt improvements seem to be inspired by the Unix Terminal.&lt;/li&gt;
  &lt;li&gt;Continuum seems to be the Windows version of Continuity for OS X (Yosemite), and even have a similar name. Both are a little different in that the former is for hybrid devices and the latter for sharing an experience across multiple devices (since there are no “hybrid” Macs), but both are about adapting the user experience to match the form factor you are using &lt;em&gt;right now&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of course, Yosemite and Windows 10 were—for the most part—developed in parallel, so any shared features across these releases are likely coincidence, not inspiration.&lt;/p&gt;

&lt;h3 id=&quot;floating-apps&quot;&gt;Floating Apps&lt;/h3&gt;

&lt;p&gt;One major Windows 10 feature that has no OS X equivalent is the ability to float Metro… I mean Modern, no, Universal (!) apps over the desktop (as opposed to requiring them to run full-screen as in Windows 8).&lt;/p&gt;

&lt;p&gt;This is definitely an improvement over having mandatory full-screen apps, but it seems like a bandaid for a much deeper design flaw. If these Modern apps are floating on the desktop, what’s the difference—from a user perspective—between these apps and any other apps. Why is there a distinction at all?&lt;/p&gt;

&lt;p&gt;Of course, modern apps look different and are optimized for touch, but now you have touch-optimized apps all over the desktop. It’s not as awkward as having full-screen apps on a 27” monitor, but it still feels like two worlds colliding, even if the impact has been blunted. Native apps on the desktop shouldn’t feel like virtual machine instances.&lt;/p&gt;

&lt;p&gt;Imagine how strange it would be to have iOS apps, as-is, running on OS X. As cool as that may seem to some, it introduces a lot of inconsistency into the UI and makes things more complicated for both users and developers. I’ve dabbled with Linux here and there over the years, and one of the things that made me cringe were all the UI inconsistencies between apps that used different UI frameworks, even more-so than running an iOS 6 (or lower) app in iOS 7/8.&lt;/p&gt;

&lt;p&gt;Perhaps this is a case where Microsoft really should have taken a page from Apple’s playbook and require desktop apps to use desktop APIs (and thus have the desktop-mode look and feel), and add a “fullscreen” button to the title bar that maximizes the app into the full-screen Modern version. I’ve seen OS X apps that update the UI into a more iOS-style interface upon going into full-screen, and returning to the Mac paradigm when exiting full-screen mode. It seems to work well.&lt;/p&gt;

&lt;p&gt;At the very least, Microsoft could do a Yosemite-scale UI overhaul of the desktop interface to at least make it match the modern look and feel, similar to the mockups &lt;a href=&quot;http://jaymachalani.com/blog/2013/12/12/fixing-windows-8&quot;&gt;Joseph Machalani posted in December 2013&lt;/a&gt;, which would be the more practical solution since they are already committed to the floating apps feature. At least every app, whether Modern or Oldie, would still &lt;em&gt;feel&lt;/em&gt; like a “Windows” app.&lt;/p&gt;

&lt;p&gt;Anyway, with all that out of my system, let’s see what history has to say about this next release of Windows…&lt;/p&gt;

&lt;h3 id=&quot;the-star-trek-theory&quot;&gt;The Star Trek Theory&lt;/h3&gt;

&lt;p&gt;I remember reading an article before Windows 8 launched that pointed out a trend where every &lt;em&gt;other&lt;/em&gt; version of Windows since Windows 3.1x was good, while the in-between releases “sucked” (much like Star Trek movies).&lt;/p&gt;

&lt;p&gt;I tracked down said article, titled &lt;a href=&quot;http://orclev.tumblr.com/post/18555141412/why-windows-8-will-suck&quot;&gt;“Why it’s likely Windows 8 Will Suck”&lt;/a&gt; posted on March 1, 2012 by &lt;a href=&quot;https://twitter.com/Orclev&quot;&gt;Chris Keener&lt;/a&gt;, and I’m glad I did:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;What I have seen is that, starting from about Windows 3.1x, every other Windows release has sucked (I’m also discounting the server and business releases). So, lets review:&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;Windows 3.1x (1992) - Good&lt;/li&gt;
    &lt;li&gt;Windows 95 (1995) - Mixed bag, at the beginning it sucked&lt;/li&gt;
    &lt;li&gt;Windows 98 (1998) - Good&lt;/li&gt;
    &lt;li&gt;Windows ME (2000) - Sucked (hard)&lt;/li&gt;
    &lt;li&gt;Windows XP (2001) - Good&lt;/li&gt;
    &lt;li&gt;Windows Vista (2006) - Sucked although not as hard as ME&lt;/li&gt;
    &lt;li&gt;Windows 7 (2009) - Good&lt;/li&gt;
    &lt;li&gt;Windows 8 (2012?) - ???&lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;So, it seems fairly obvious that every other release of Windows has in fact sucked, but why has it sucked?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Keener goes into all a lot of explanation, positing that the every other release is intentionally crippled by Microsoft (more on that in a moment) before making his predictions:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;So, based on the history we’ve seen, I’m making two predictions:&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;Windows 8 is going to suck.&lt;/li&gt;
    &lt;li&gt;We’ll see Windows 9 (or whatever they’re going to call it) released sometime in the next 3 years and it will fix nearly every problem in Windows 8.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Windows 8 would definitely meet the author’s “sucked” criteria, so… he pretty much nailed it. Windows 10 hasn’t been officially released yet, but based on what we know about the developer preview, it’s obvious that one of its primary goals is to “fix nearly every problem in Windows 8”.&lt;/p&gt;

&lt;p&gt;I don’t buy into the conspiracy theory of Microsoft purposefully crippling every other release, however. As a developer, I know that the likely scenario is that it’s much easier to fix, or rather fine-tune something that’s flawed than it is to get it right the first time. It’s not a whole lot different than OS X Snow Leopard’s ZERO new features… feature, except Windows 10 actually does have a lot of new things in &lt;em&gt;addition&lt;/em&gt; to dealing with gripes people had with Windows 8.&lt;/p&gt;

&lt;p&gt;All in all, Windows 10 looks like it’s going to be a solid update. If you ask me though, I think what Windows users really need is a new Recycle Bin icon.&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;Yes, Microsoft is skipping Windows 9 and jumping straight to Windows 10. That means they’re at least a few years ahead now, right? &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
         </item>
      
         <item>
            <title>The Empire Reboots</title>
            
               <link>http://www.vanityfair.com/business/2014/11/satya-nadella-bill-gates-steve-ballmer-microsoft.print</link>
               <guid isPermaLink="false">http://www.vanityfair.com/business/2014/11/satya-nadella-bill-gates-steve-ballmer-microsoft.print</guid>
            
            <pubDate>Sun, 12 Oct 2014 15:00:39 -0700</pubDate>
            <description>&lt;p&gt;Speaking of &lt;a href=&quot;/2014/10/reboot/&quot;&gt;rebooting&lt;/a&gt;, I came across this long article from Vanity Fair that details a lot of interesting Microsoft history, specifically events surrounding Bill Gates, Steve Ballmer, and the drama that occurred before Balmer stepped down as CEO last year before delving into Satya Nadella’s new era in Redmond.&lt;/p&gt;
</description>
         </item>
      
         <item>
            <title>Starting an Open Source Project that People Use</title>
            
               <link>http://www.barryclark.co/starting-an-open-source-project/</link>
               <guid isPermaLink="false">http://www.barryclark.co/starting-an-open-source-project/</guid>
            
            <pubDate>Sun, 12 Oct 2014 13:13:17 -0700</pubDate>
            <description>&lt;p&gt;Great advice from Barry Clark for anyone developing an open source project. As he puts it:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Starting an open source project is a great way to build your web developer portfolio while creating something for everyone’s benefit.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
         </item>
      
         <item>
            <title>Reboot</title>
            
               <link>http://jonbeebe.net/2014/10/reboot/</link>
               <guid isPermaLink="false">http://jonbeebe.net/2014/10/reboot/</guid>
            
            <pubDate>Sun, 12 Oct 2014 12:35:00 -0700</pubDate>
            <description>&lt;p&gt;For the past year, maybe more, I’ve pretty much neglected all of my web properties. I had a Tumblr blog a few years back where I used to post reviews, the occasional opinion, and Corona SDK-related code snippets, tutorials, news, etc.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;The Tumblr blog was actually gaining quite a bit of traction before I was hired by Ansca (now known as &lt;a href=&quot;http://www.coronalabs.com&quot;&gt;Corona Labs&lt;/a&gt;), in which my work there took priority and the type of content I would post to my blog was being published on the company blog anyway&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;, so there was little time or motivation for me to continue. Over the years I registered a couple of domain names and tried to start writing again but it never quite caught on for me.&lt;/p&gt;

&lt;p&gt;Things are different now, however. I’m in a professionally stable position (I’ve long since left Corona Labs). My personal life is great. And I really, really miss writing and sharing stuff on the web. Therefore, I decided to make a clean break with the past and delete my previous website hosted at this domain, redirect my &lt;em&gt;other&lt;/em&gt; domain to this blog, and set the stage for a writing environment that motivates me to turn this web property into a place that is informative, somewhat educational, and at the very least, entertaining for those interested in the same topics as myself.&lt;/p&gt;

&lt;p&gt;A long time ago I learned that maintaining a blog, while at times fun and rewarding, is very difficult to do consistently over time, especially with personal and professional responsibilities taking up much of my time. Therefore, in order to “set the stage” properly and position myself to &lt;em&gt;continue&lt;/em&gt; writing over the long-term, I came up with five major things need to be in place before I can begin:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Choose the right publishing platform&lt;/li&gt;
  &lt;li&gt;Implement a design I’m pleased with&lt;/li&gt;
  &lt;li&gt;Reduce costs as much as possible&lt;/li&gt;
  &lt;li&gt;Have a frictionless publishing workflow&lt;/li&gt;
  &lt;li&gt;Redefine success&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;publishing-platform&quot;&gt;Publishing platform&lt;/h3&gt;

&lt;p&gt;No more Tumblr. No more Svbtle. No more WordPress. Don’t get me wrong, there’s nothing wrong with any of them, but I don’t want to be put in the position of one day having to take the time to “migrate” my website if any of the services shut down, or impose some kind of limitation that I don’t agree with. And while that doesn’t really apply to a self-hosted WordPress setup, even that’s just too “heavy” for what I want: a very simple website—fully mine—where I can routinely publish my writings and links.&lt;/p&gt;

&lt;p&gt;After some research, I found a solution that meets my needs perfectly: &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt;. It’s painless to set up, easy to customize, has all the features I need, and best of all, publishing a new post is as simple as creating a new text file, putting my words in it, and pushing in the changes via &lt;code class=&quot;highlighter-rouge&quot;&gt;git&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;As a huge plus, the entire thing ends up being just a folder of static files so if I ever decide to switch hosting providers in the future, it’ll just be a matter of uploading all the files to a different web host (and making the required domain changes of course). No databases, no PHP, and no web interface to fight with—the perfect solution for me.&lt;/p&gt;

&lt;h3 id=&quot;website-design&quot;&gt;Website design&lt;/h3&gt;

&lt;p&gt;The way my website looks is important very to me. So much in fact, I have a tendency to spend too much time tweaking things until everything’s “just right”&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;—time I should be spending writing new content. Therefore, I decided to get that all out of my system right off the bat and make the website look, feel, and work just the way I want it to before writing anything. I ended up going with a very minimal design that’s likely to appeal to me for a long time (fingers crossed)&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;h3 id=&quot;reducing-costs&quot;&gt;Reducing costs&lt;/h3&gt;

&lt;p&gt;Feelings of guilt, even if minor, can be a major de-motivator and that’s the last thing I need when it comes to maintaining a website. If I’m spending money every month—money that could be spent on my wife and kids—to keep something going, something’s that’s not brining in any income initially, then it’ll help me personally to stay motivated if I know I went with the most affordable option I could (without sacrificing quality, of course).&lt;/p&gt;

&lt;p&gt;A nice benefit to using Jekyll is that I can host this website using &lt;a href=&quot;http://pages.github.com&quot;&gt;Github Pages&lt;/a&gt;, which is completely free (as in free beer). In fact, they encourage users to use Jekyll with their service. So at the moment, it’s costing me a whopping $10 a year to keep this website live, and that’s for the domain name (which I recently just renewed). It’s amazing that we live in a time where words can be published instantly and read by countless numbers of people around the world at hardly no cost.&lt;/p&gt;

&lt;p&gt;So far I’m happy with the quality, but as I mentioned before, if Github Pages doesn’t end up working out in the long run for whatever reason, I can easily switch to another hosting solution within minutes since Jekyll-generated websites are simply a collection of static files.&lt;/p&gt;

&lt;h3 id=&quot;publishing-workflow&quot;&gt;Publishing workflow&lt;/h3&gt;

&lt;p&gt;The amount of friction between drafting a post, editing, and finally publishing needs to be as little as possible for me to keep the motivation to continue writing. Fortunately, my setup hits the sweet spot here. I write and edit my posts in &lt;a href=&quot;http://bywordapp.com&quot;&gt;Byword&lt;/a&gt; and do a quick commit/push into my site’s Github repo. Within seconds, the post is live.&lt;/p&gt;

&lt;p&gt;When I used Tumblr or Wordpress in the past, I would end up writing my posts in a text editor, and when it’s ready, copy/paste into the web interface. That’s too much friction in my opinion, so being able to cut out the “middle man” is a big win for me&lt;sup id=&quot;fnref:4&quot;&gt;&lt;a href=&quot;#fn:4&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;h3 id=&quot;redefining-success&quot;&gt;Redefining success&lt;/h3&gt;

&lt;p&gt;Since it’s costing me practically nothing to run this site, and I’m making a decent living from my job and other contracting gigs, I’m under no pressure to turn this blog into something that’s going to generate my primary source of income so I can work from home.&lt;/p&gt;

&lt;p&gt;I already work from home, which is a goal I had for a long time before it happened, so that need is already met. My purpose for this website is to simply serve as a source of joy for myself as an outlet for my thoughts, and to provide value to readers by being informative, educational, and—at the very least—entertaining. I want this site’s &lt;a href=&quot;/feed&quot;&gt;feed&lt;/a&gt; to be one you look forward to seeing new updates from, much like a few of the blogs I subscribe to and read every day.&lt;/p&gt;

&lt;p&gt;If down the line, this website gains enough readership that it can actually contribute to my bottom line, great—it’ll be an added bonus, not a goal I’ll have needed to meet to consider this project a success. Rather, my definition of success for this website is if I meet my goal of posting to this site reguarly, and if a handful of readers get some value out of it.&lt;/p&gt;

&lt;p&gt;So now with all five points met, the stage is set. Let the reboot commence.&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;In addition to being frameworks engineer, I wrote weekly tutorials for Ansca. The work I posted to my blog was one of the contributing factors to my getting hired, so it wasn’t all for nothing. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;Another reason I didn’t go with WordPress this time: it’s way too easy for me to get lost browsing and trying out new plugins. Jekyll supports plugins too, but I’m not familiar with the process so it’s easy to stay away from it. That’s not the case with WordPress, however, where new plugins are just a click away. &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;The Jekyll theme I’m using is a highly modified version of &lt;a href=&quot;https://github.com/berkoz/gereksiz&quot;&gt;Gereksiz&lt;/a&gt; by &lt;a href=&quot;http://bugsofberk.net/about&quot;&gt;Berk Özbalcı&lt;/a&gt;, with colors being from the &lt;a href=&quot;http://ethanschoonover.com/solarized&quot;&gt;Solarized&lt;/a&gt; palette. &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:4&quot;&gt;
      &lt;p&gt;I know I could have went with sofware like MarsEdit, but I’m most comfortable writing in a plain text editor, particularly one made for writing (such as Byword), not necessarily blogging. &lt;a href=&quot;#fnref:4&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
         </item>
      
   </channel>
</rss>